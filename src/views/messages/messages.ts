import { ActionRowBuilder, InteractionReplyOptions, MessageCreateOptions, MessageFlags, User } from "discord.js";
import config from "../../config";
import { confirmActionDescriptions } from "../../constants/confirm-action-descriptions";
import { roleOrderLimits, roleTakenOrdersLimits } from "../../constants/orders/order-limits";
import { orderRoles } from "../../constants/orders/order-roles";
import { OrderData, OrderType } from "../../types/order";
import { IUserData } from "../../types/user-data";
import bioUpdateButton from "../buttons/bio";
import confirmActionButtons from "../buttons/confirm-action";
import { myOrdersListButtons, orderMenuButtons } from "../buttons/orders/orders-manage";
import ordersModerateListButtons from "../buttons/orders/orders-moderate";
import { getOrderTakenButtons, ordersListButtons, viewOrdersListButton } from "../buttons/orders/orders-work";
import roleSelectButton from "../buttons/roles";
import supportButton from "../buttons/support";
import userModerateButtons from "../buttons/user-moderate";
import { getConfirmActionEmbed } from "../embeds/confirm-action";
import { getMyOrdersListEmbed, orderMenuEmbed } from "../embeds/orders/orders-manage";
import { getOrderClosedLogEmbed, getOrderModLogEmbed, getOrdersModerateListEmbed, getUserModLogEmbed } from "../embeds/orders/orders-moderate";
import { getOrdersListEmbed } from "../embeds/orders/orders-work";
import rolesEmbed from "../embeds/roles";
import rulesEmbed from "../embeds/rules";
import supportEmbed from "../embeds/support";
import { getSupportRequestEmbed } from "../embeds/support-request";
import getUserInfoEmbed from "../embeds/user-info";
import getUserModerateEmbed from "../embeds/user-moderate";
import { getOrderTypeSelectMenu } from "../select-menus/orders/orders-manage";
import getRoleSelectMenu from "../select-menus/roles";

class Messages {
	public roleSelection(userId: string, userData?: IUserData): InteractionReplyOptions {
		return {
			content: `<@${userId}>, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å.`,
			components: [new ActionRowBuilder().addComponents(getRoleSelectMenu(userData)).toJSON()],
			flags: MessageFlags.Ephemeral,
			withResponse: true
		};
	}

	public supportRequest(userId: string, message: string): MessageCreateOptions {
		return {
			content: "@everyone",
			embeds: [getSupportRequestEmbed(userId, message)]
		};
	}
	public orderTypeSelection(userId: string): InteractionReplyOptions {
		return {
			content: `<@${userId}>, –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –±—É–¥–µ—Ç–µ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å.`,
			components: [new ActionRowBuilder().addComponents(getOrderTypeSelectMenu()).toJSON()],
			flags: MessageFlags.Ephemeral,
			withResponse: true
		};
	}

	public ordersList(orderData: OrderData, currentPage: number, pagesQty: number): InteractionReplyOptions {
		return {
			components: [ordersListButtons.toJSON()],
			embeds: [getOrdersListEmbed(orderData, currentPage, pagesQty)],
			flags: MessageFlags.Ephemeral
		};
	}
	public userModerate(user: User, permissions: IUserData["permissions"]): InteractionReplyOptions {
		return {
			components: [userModerateButtons(permissions)],
			embeds: [getUserModerateEmbed(user)],
			flags: MessageFlags.Ephemeral
		};
	}

	public ordersModerateList(orderData: OrderData, currentPage: number, pagesQty: number): InteractionReplyOptions {
		return {
			components: [ordersModerateListButtons.toJSON()],
			embeds: [getOrdersModerateListEmbed(orderData, currentPage, pagesQty)],
			flags: MessageFlags.Ephemeral
		};
	}

	public myOrdersList(orderData: OrderData, currentPage: number, pagesQty: number): InteractionReplyOptions {
		return {
			components: [myOrdersListButtons.toJSON()],
			embeds: [getMyOrdersListEmbed(orderData, currentPage, pagesQty)],
			flags: MessageFlags.Ephemeral
		};
	}

	public newOrder(orderType: OrderType): MessageCreateOptions {
		const pings = orderRoles[orderType].map(roleId => `<@&${roleId}>`).join(", ");

		return {
			content: `üÜï ${pings}, —É –≤–∞—Å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∑–∞–∫–∞–∑—ã. –ù–µ –∑–∞—Ç—è–≥–∏–≤–∞–π—Ç–µ ‚Äî –∫—Ç–æ-—Ç–æ –º–æ–∂–µ—Ç —É—Å–ø–µ—Ç—å –≤–∑—è—Ç—å –∑–∞–∫–∞–∑ —Ä–∞–Ω—å—à–µ!`,
			components: [new ActionRowBuilder().addComponents(viewOrdersListButton).toJSON()]
		};
	}

	public orderTaken(order: OrderData, userData: IUserData, user: User): MessageCreateOptions {
		return {
			content: `<@${order.orderedBy}>, –≤–∞—à –∑–∞–∫–∞–∑ –≤–∑—è–ª —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ <@${order.takenBy}>. –í —ç—Ç–æ–º —á–∞—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç—ã. –ö–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —á–∞—Ç –∏ –≤—Å—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –ù–∏–∂–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ.`,
			components: [getOrderTakenButtons(order.id.toString()).toJSON()],
			embeds: [getUserInfoEmbed(userData, user)]
		};
	}

	public newOrderChannelInfo(order: OrderData): MessageCreateOptions {
		return {
			content: `üíº –≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç –¥–ª—è <@${order.orderedBy}> –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞, –∑–∞–¥–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –≤–∞—à –∑–∞–∫–∞–∑ –≤–æ–∑—å–º—É—Ç –≤ —Ä–∞–±–æ—Ç—É. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª <#1272850187882205194>. –≠—Ç–æ—Ç —á–∞—Ç –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –≤–∞–º, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.`
		};
	}

	public userInfo(userData: IUserData, target: User): InteractionReplyOptions {
		return {
			embeds: [getUserInfoEmbed(userData, target)],
			flags: MessageFlags.Ephemeral
		};
	}
	public orderModLog(order: OrderData, moderator: User, success: boolean, withBan: boolean): MessageCreateOptions {
		return {
			content: "@everyone",
			embeds: [getOrderModLogEmbed(order, moderator, success, withBan)]
		};
	}
	public confirmAction(interactionId: string, description: keyof typeof confirmActionDescriptions): InteractionReplyOptions {
		return {
			embeds: [getConfirmActionEmbed(description)],
			components: [confirmActionButtons(interactionId)],
			flags: MessageFlags.Ephemeral
		};
	}
	public userModLog(user: User, moderator: User, permissionType: keyof IUserData["permissions"], isBan: boolean): MessageCreateOptions {
		return {
			content: "@everyone",
			embeds: [getUserModLogEmbed(user, moderator, permissionType, isBan)]
		};
	}
	public orderClosedLog(order: OrderData, closedBy: string): MessageCreateOptions {
		return {
			content: "@everyone",
			embeds: [getOrderClosedLogEmbed(order, closedBy)]
		};
	}

	public readonly orderMenu: MessageCreateOptions = {
		embeds: [orderMenuEmbed],
		components: [orderMenuButtons.toJSON()]
	};

	public readonly roles: MessageCreateOptions = {
		embeds: [rolesEmbed],
		components: [new ActionRowBuilder().addComponents(roleSelectButton, bioUpdateButton).toJSON()]
	};

	public readonly support: MessageCreateOptions = {
		embeds: [supportEmbed],
		components: [new ActionRowBuilder().addComponents(supportButton).toJSON()]
	};

	public readonly rules: MessageCreateOptions = { embeds: [rulesEmbed] };

	public readonly priceList: MessageCreateOptions = {
		content: `
# üìã –ü—Ä–∞–π—Å-–ª–∏—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞

**–û–ø–ª–∞—Ç–∞:** USDT (–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞), PayPal, Robux.  
–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ä–æ–ª–∏ –ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: <@1058787941364797490>.

### üíé –î–æ–Ω–∞—Ç-—Ä–æ–ª—å \`Super Client\`
**–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:** –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ **${roleOrderLimits[config.roleIds.superClient]}** –∑–∞–∫–∞–∑–æ–≤  
**–°—Ç–æ–∏–º–æ—Å—Ç—å:** 9 USD | 800 Robux
**–°—Ä–æ–∫:** –†–æ–ª—å –≤—ã–¥–∞—ë—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞

### üíª –î–æ–Ω–∞—Ç-—Ä–æ–ª—å \`Super Developer\`
**–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:** –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±—Ä–∞—Ç—å –¥–æ **${roleTakenOrdersLimits[config.roleIds.superDev]}** –∑–∞–∫–∞–∑–æ–≤  
**–°—Ç–æ–∏–º–æ—Å—Ç—å:** 9 USD | 800 Robux
**–°—Ä–æ–∫:** –†–æ–ª—å –≤—ã–¥–∞—ë—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞

### üöÄ –î–æ–Ω–∞—Ç-—Ä–æ–ª—å \`Server Booster\`
**–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:** –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ **${roleOrderLimits[config.roleIds.booster]}** –∑–∞–∫–∞–∑–æ–≤ –∏ –±—Ä–∞—Ç—å –¥–æ **${roleTakenOrdersLimits[config.roleIds.booster]}** –∑–∞–∫–∞–∑–æ–≤  
**–°—Ç–æ–∏–º–æ—Å—Ç—å:** Boost —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞  
**–°—Ä–æ–∫:** –ù–∞ –≤—Å—ë –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –±—É—Å—Ç–∞
`
	};
}

const messages = new Messages();
export default messages;
